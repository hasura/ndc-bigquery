name: Postgres NDC build and deploy with Nix

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  binary:
    name: deploy::binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Install Nix ❄
        uses: DeterminateSystems/nix-installer-action@v4

      - name: Run the Magic Nix Cache 🔌
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Login to GitHub Container Registry 📦
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build the crate using nix 🔨
        run: nix build --print-build-logs

      - name: Create release 🚀
        uses: actions/upload-artifact@v3
        with:
          name: hasura-postgres-agent-rs
          path: result/bin/ndc-postgres

      # scream into Slack if something goes wrong
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notify_when: failure
          notification_title: '😧 Error on <{repo_url}|{repo}>'
          message_format: '🐴 *{workflow}* {status_message} for <{repo_url}|{repo}>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.BROKEN_BUILD_SLACK_WEBHOOK_URL }}

  docker:
    name: deploy::docker
    needs: binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Install Nix ❄
        uses: DeterminateSystems/nix-installer-action@v4

      - name: Run the Magic Nix Cache 🔌
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Login to GitHub Container Registry 📦
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy 🚀
        run: nix run .#publish-docker-image ${{ github.ref }}

      # scream into Slack if something goes wrong
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notify_when: failure
          notification_title: '😧 Error on <{repo_url}|{repo}>'
          message_format: '🐴 *{workflow}* {status_message} for <{repo_url}|{repo}>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.BROKEN_BUILD_SLACK_WEBHOOK_URL }}
