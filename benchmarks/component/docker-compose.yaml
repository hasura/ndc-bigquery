version: "3.6"

name: postgres-ndc-component-benchmarks

services:
  benchmark:
    image: grafana/k6 
    environment:
      DEPLOYMENT_ID: "9f532406-b0c8-4c17-a58a-64286c1e1fd6"
      OUTPUT_DIRECTORY: "/home/k6/output"
      K6_OUT: "experimental-prometheus-rw"
      K6_PROMETHEUS_RW_SERVER_URL: "http://prometheus:9090/api/v1/write"
      K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM: "true"
    volumes:
      - type: volume
        source: benchmark_output
        target: /home/k6/output
      - type: bind
        source: ./benchmarks
        target: /benchmarks
        read_only: true
    depends_on:
      agent:
        condition: service_started
      prometheus:
        condition: service_started
      benchmark-output-init:
        condition: service_completed_successfully

  benchmark-output-init:
    image: grafana/k6 
    entrypoint:
      - sh
      - -c
    command:
      - |
        /bin/mkdir -p /home/k6/output/summaries
        /bin/chown -R k6: /home/k6/output
    user: root
    volumes:
      - type: volume
        source: benchmark_output
        target: /home/k6/output

  agent:
    image: ghcr.io/hasura/postgres-agent-rs:dev
    ports:
      - 3000
    environment:
      # we don't care about traces right now, and the benchmarks flood the batch buffer
      OTEL_TRACES_SAMPLER: "always_off"
    volumes:
      - type: bind
        source: ./deployments
        target: /data/deployments
        read_only: true
    depends_on:
      postgres:
        condition: service_started

  postgres:
    image: postgis/postgis:15-3.3-alpine
    platform: linux/amd64
    command:
      - -F # turn fsync off for speed
      - -N 1000 # increase max connections from 100 so we can run more HGEs
    ports:
      - 5432
    environment:
      POSTGRES_PASSWORD: "password"
    volumes:
      - /var/lib/postgresql/data
      - ../../static/chinook-postgres.sql:/docker-entrypoint-initdb.d/chinook-postgres.sql:ro

  # k6 will push statistics to Prometheus
  prometheus:
    image: prom/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      - --enable-feature=native-histograms
    ports:
      - 9090
    volumes:
      - type: volume
        source: prometheus
        target: /prometheus

  # Grafana will visualize k6 statistics
  grafana:
    image: grafana/grafana
    ports:
      - 64300:3000
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ../grafana:/etc/grafana/provisioning/
    depends_on:
      prometheus:
        condition: service_started

volumes:
  benchmark_output:
  prometheus:
