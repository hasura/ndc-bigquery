{
  "version": 1,
  "connection_uris": "postgresql://postgres:password@localhost:64002",
  "metadata": {
    "tables": {
      "Album": {
        "schema_name": "hasura-development.chinook_sample",
        "table_name": "albums",
        "columns": {
          "AlbumId": {
            "name": "AlbumId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "ArtistId": {
            "name": "ArtistId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "Title": {
            "name": "Title",
            "type": "string",
            "nullable": "NonNullable"
          }
        },
        "uniqueness_constraints": {
          "PK_Album": ["AlbumId"]
        },
        "foreign_relations": {
          "FK_AlbumArtistId": {
            "foreign_table": "Artist",
            "column_mapping": {
              "ArtistId": "ArtistId"
            }
          }
        }
      },
      "Artist": {
        "schema_name": "hasura-development.chinook_sample",
        "table_name": "artists",
        "columns": {
          "ArtistId": {
            "name": "ArtistId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "Name": {
            "name": "Name",
            "type": "string",
            "nullable": "Nullable"
          }
        },
        "uniqueness_constraints": {
          "PK_Artist": ["ArtistId"]
        },
        "foreign_relations": {}
      },
      "Customer": {
        "schema_name": "hasura-development.chinook_sample",
        "table_name": "Customer",
        "columns": {
          "Address": {
            "name": "Address",
            "type": "string",
            "nullable": "Nullable"
          },
          "City": {
            "name": "City",
            "type": "string",
            "nullable": "Nullable"
          },
          "Company": {
            "name": "Company",
            "type": "string",
            "nullable": "Nullable"
          },
          "Country": {
            "name": "Country",
            "type": "string",
            "nullable": "Nullable"
          },
          "CustomerId": {
            "name": "CustomerId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "Email": {
            "name": "Email",
            "type": "string",
            "nullable": "NonNullable"
          },
          "Fax": {
            "name": "Fax",
            "type": "string",
            "nullable": "Nullable"
          },
          "FirstName": {
            "name": "FirstName",
            "type": "string",
            "nullable": "NonNullable"
          },
          "LastName": {
            "name": "LastName",
            "type": "string",
            "nullable": "NonNullable"
          },
          "Phone": {
            "name": "Phone",
            "type": "string",
            "nullable": "Nullable"
          },
          "PostalCode": {
            "name": "PostalCode",
            "type": "string",
            "nullable": "Nullable"
          },
          "State": {
            "name": "State",
            "type": "string",
            "nullable": "Nullable"
          },
          "SupportRepId": {
            "name": "SupportRepId",
            "type": "integer",
            "nullable": "Nullable"
          }
        },
        "uniqueness_constraints": {
          "PK_Customer": ["CustomerId"]
        },
        "foreign_relations": {
          "FK_CustomerSupportRepId": {
            "foreign_table": "Employee",
            "column_mapping": {
              "SupportRepId": "EmployeeId"
            }
          }
        }
      },
      "Employee": {
        "schema_name": "hasura-development.chinook_sample",
        "table_name": "employees",
        "columns": {
          "Address": {
            "name": "Address",
            "type": "string",
            "nullable": "Nullable"
          },
          "BirthDate": {
            "name": "BirthDate",
            "type": "timestamp without time zone",
            "nullable": "Nullable"
          },
          "City": {
            "name": "City",
            "type": "string",
            "nullable": "Nullable"
          },
          "Country": {
            "name": "Country",
            "type": "string",
            "nullable": "Nullable"
          },
          "Email": {
            "name": "Email",
            "type": "string",
            "nullable": "Nullable"
          },
          "EmployeeId": {
            "name": "EmployeeId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "Fax": {
            "name": "Fax",
            "type": "string",
            "nullable": "Nullable"
          },
          "FirstName": {
            "name": "FirstName",
            "type": "string",
            "nullable": "NonNullable"
          },
          "HireDate": {
            "name": "HireDate",
            "type": "timestamp without time zone",
            "nullable": "Nullable"
          },
          "LastName": {
            "name": "LastName",
            "type": "string",
            "nullable": "NonNullable"
          },
          "Phone": {
            "name": "Phone",
            "type": "string",
            "nullable": "Nullable"
          },
          "PostalCode": {
            "name": "PostalCode",
            "type": "string",
            "nullable": "Nullable"
          },
          "ReportsTo": {
            "name": "ReportsTo",
            "type": "integer",
            "nullable": "Nullable"
          },
          "State": {
            "name": "State",
            "type": "string",
            "nullable": "Nullable"
          },
          "Title": {
            "name": "Title",
            "type": "string",
            "nullable": "Nullable"
          }
        },
        "uniqueness_constraints": {
          "PK_Employee": ["EmployeeId"]
        },
        "foreign_relations": {
          "FK_EmployeeReportsTo": {
            "foreign_table": "Employee",
            "column_mapping": {
              "ReportsTo": "EmployeeId"
            }
          }
        }
      },
      "Genre": {
        "schema_name": "hasura-development.chinook_sample",
        "table_name": "genres",
        "columns": {
          "GenreId": {
            "name": "GenreId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "Name": {
            "name": "Name",
            "type": "string",
            "nullable": "Nullable"
          }
        },
        "uniqueness_constraints": {
          "PK_Genre": ["GenreId"]
        },
        "foreign_relations": {}
      },
      "Invoice": {
        "schema_name": "hasura-development.chinook_sample",
        "table_name": "invoices",
        "columns": {
          "BillingAddress": {
            "name": "BillingAddress",
            "type": "string",
            "nullable": "Nullable"
          },
          "BillingCity": {
            "name": "BillingCity",
            "type": "string",
            "nullable": "Nullable"
          },
          "BillingCountry": {
            "name": "BillingCountry",
            "type": "string",
            "nullable": "Nullable"
          },
          "BillingPostalCode": {
            "name": "BillingPostalCode",
            "type": "string",
            "nullable": "Nullable"
          },
          "BillingState": {
            "name": "BillingState",
            "type": "string",
            "nullable": "Nullable"
          },
          "CustomerId": {
            "name": "CustomerId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "InvoiceDate": {
            "name": "InvoiceDate",
            "type": "timestamp without time zone",
            "nullable": "NonNullable"
          },
          "InvoiceId": {
            "name": "InvoiceId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "Total": {
            "name": "Total",
            "type": "numeric",
            "nullable": "NonNullable"
          }
        },
        "uniqueness_constraints": {
          "PK_Invoice": ["InvoiceId"]
        },
        "foreign_relations": {
          "FK_InvoiceCustomerId": {
            "foreign_table": "Customer",
            "column_mapping": {
              "CustomerId": "CustomerId"
            }
          }
        }
      },
      "InvoiceLine": {
        "schema_name": "hasura-development.chinook_sample",
        "table_name": "invoice_items",
        "columns": {
          "InvoiceId": {
            "name": "InvoiceId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "InvoiceLineId": {
            "name": "InvoiceLineId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "Quantity": {
            "name": "Quantity",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "TrackId": {
            "name": "TrackId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "UnitPrice": {
            "name": "UnitPrice",
            "type": "numeric",
            "nullable": "NonNullable"
          }
        },
        "uniqueness_constraints": {
          "PK_InvoiceLine": ["InvoiceLineId"]
        },
        "foreign_relations": {
          "FK_InvoiceLineInvoiceId": {
            "foreign_table": "Invoice",
            "column_mapping": {
              "InvoiceId": "InvoiceId"
            }
          },
          "FK_InvoiceLineTrackId": {
            "foreign_table": "Track",
            "column_mapping": {
              "TrackId": "TrackId"
            }
          }
        }
      },
      "MediaType": {
        "schema_name": "hasura-development.chinook_sample",
        "table_name": "media_types",
        "columns": {
          "MediaTypeId": {
            "name": "MediaTypeId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "Name": {
            "name": "Name",
            "type": "string",
            "nullable": "Nullable"
          }
        },
        "uniqueness_constraints": {
          "PK_MediaType": ["MediaTypeId"]
        },
        "foreign_relations": {}
      },
      "Playlist": {
        "schema_name": "hasura-development.chinook_sample",
        "table_name": "playlists",
        "columns": {
          "Name": {
            "name": "Name",
            "type": "string",
            "nullable": "Nullable"
          },
          "PlaylistId": {
            "name": "PlaylistId",
            "type": "integer",
            "nullable": "NonNullable"
          }
        },
        "uniqueness_constraints": {
          "PK_Playlist": ["PlaylistId"]
        },
        "foreign_relations": {}
      },
      "PlaylistTrack": {
        "schema_name": "hasura-development.chinook_sample",
        "table_name": "playlist_track",
        "columns": {
          "PlaylistId": {
            "name": "PlaylistId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "TrackId": {
            "name": "TrackId",
            "type": "integer",
            "nullable": "NonNullable"
          }
        },
        "uniqueness_constraints": {
          "PK_PlaylistTrack": ["PlaylistId", "TrackId"]
        },
        "foreign_relations": {
          "FK_PlaylistTrackPlaylistId": {
            "foreign_table": "Playlist",
            "column_mapping": {
              "PlaylistId": "PlaylistId"
            }
          },
          "FK_PlaylistTrackTrackId": {
            "foreign_table": "Track",
            "column_mapping": {
              "TrackId": "TrackId"
            }
          }
        }
      },
      "Track": {
        "schema_name": "hasura-development.chinook_sample",
        "table_name": "tracks",
        "columns": {
          "AlbumId": {
            "name": "AlbumId",
            "type": "integer",
            "nullable": "Nullable"
          },
          "Bytes": {
            "name": "Bytes",
            "type": "integer",
            "nullable": "Nullable"
          },
          "Composer": {
            "name": "Composer",
            "type": "string",
            "nullable": "Nullable"
          },
          "GenreId": {
            "name": "GenreId",
            "type": "integer",
            "nullable": "Nullable"
          },
          "MediaTypeId": {
            "name": "MediaTypeId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "Milliseconds": {
            "name": "Milliseconds",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "Name": {
            "name": "Name",
            "type": "string",
            "nullable": "NonNullable"
          },
          "TrackId": {
            "name": "TrackId",
            "type": "integer",
            "nullable": "NonNullable"
          },
          "UnitPrice": {
            "name": "UnitPrice",
            "type": "numeric",
            "nullable": "NonNullable"
          }
        },
        "uniqueness_constraints": {
          "PK_Track": ["TrackId"]
        },
        "foreign_relations": {
          "FK_TrackAlbumId": {
            "foreign_table": "Album",
            "column_mapping": {
              "AlbumId": "AlbumId"
            }
          },
          "FK_TrackGenreId": {
            "foreign_table": "Genre",
            "column_mapping": {
              "GenreId": "GenreId"
            }
          },
          "FK_TrackMediaTypeId": {
            "foreign_table": "MediaType",
            "column_mapping": {
              "MediaTypeId": "MediaTypeId"
            }
          }
        }
      }
    },
    "native_queries": {
      "artist": {
        "sql": "SELECT * FROM hasura-development.chinook_sample.\"artists\"",
        "columns": {
          "ArtistId": {
            "name": "ArtistId",
            "type": "integer"
          },
          "Name": {
            "name": "Name",
            "type": "string"
          }
        }
      },
      "artist_below_id": {
        "sql": "SELECT * FROM hasura-development.chinook_sample.\"artists\" WHERE \"ArtistId\" < {{id}}",
        "columns": {
          "ArtistId": {
            "name": "ArtistId",
            "type": "integer"
          },
          "Name": {
            "name": "Name",
            "type": "string"
          }
        },
        "arguments": {
          "id": {
            "name": "id",
            "type": "integer"
          }
        }
      },
      "album_by_title": {
        "sql": "SELECT * FROM hasura-development.chinook_sample.\"Album\" WHERE \"Title\" LIKE {{title}} AND \"AlbumId\" < {{id}}",
        "columns": {
          "AlbumId": {
            "name": "AlbumId",
            "type": "integer"
          },
          "Title": {
            "name": "Title",
            "type": "string"
          },
          "ArtistId": {
            "name": "ArtistId",
            "type": "integer"
          }
        },
        "arguments": {
          "id": {
            "name": "id",
            "type": "integer"
          },
          "title": {
            "name": "title",
            "type": "string"
          }
        }
      },
      "value_types": {
        "sql": "SELECT {{boolean}} as boolean, {{integer}} as integer, {{smallint}} as smallint, {{bigint}} as bigint, {{real}} as real, {{double precision}} as \"double precision\", {{numeric}} as numeric, {{character}} as character, {{string}} as \"string\", {{text}} as text, {{date}} as date, {{time}} as time, {{timetz}} as timetz, {{timestamp}} as timestamp, {{timestamptz}} as timestamptz, {{uuid}} as uuid",
        "columns": {
          "boolean": {
            "name": "boolean",
            "type": "boolean"
          },
          "smallint": {
            "name": "smallint",
            "type": "smallint"
          },
          "integer": {
            "name": "integer",
            "type": "integer"
          },
          "bigint": {
            "name": "bigint",
            "type": "bigint"
          },
          "real": {
            "name": "real",
            "type": "real"
          },
          "double precision": {
            "name": "double precision",
            "type": "double precision"
          },
          "numeric": {
            "name": "numeric",
            "type": "numeric"
          },
          "character": {
            "name": "character",
            "type": "character"
          },
          "string": {
            "name": "string",
            "type": "string"
          },
          "text": {
            "name": "text",
            "type": "text"
          },
          "date": {
            "name": "date",
            "type": "date"
          },
          "time": {
            "name": "time",
            "type": "time without time zone"
          },
          "timetz": {
            "name": "timetz",
            "type": "time with time zone"
          },
          "timestamp": {
            "name": "timestamp",
            "type": "timestamp without time zone"
          },
          "timestamptz": {
            "name": "timestamptz",
            "type": "timestamp with time zone"
          },
          "uuid": {
            "name": "uuid",
            "type": "uuid"
          }
        },
        "arguments": {
          "boolean": {
            "name": "boolean",
            "type": "boolean"
          },
          "smallint": {
            "name": "smallint",
            "type": "smallint"
          },
          "integer": {
            "name": "integer",
            "type": "integer"
          },
          "bigint": {
            "name": "bigint",
            "type": "bigint"
          },
          "real": {
            "name": "real",
            "type": "real"
          },
          "double precision": {
            "name": "double precision",
            "type": "double precision"
          },
          "numeric": {
            "name": "numeric",
            "type": "numeric"
          },
          "character": {
            "name": "character",
            "type": "character"
          },
          "string": {
            "name": "string",
            "type": "string"
          },
          "text": {
            "name": "text",
            "type": "text"
          },
          "date": {
            "name": "date",
            "type": "date"
          },
          "time": {
            "name": "time",
            "type": "time without time zone"
          },
          "timetz": {
            "name": "timetz",
            "type": "time with time zone"
          },
          "timestamp": {
            "name": "timestamp",
            "type": "timestamp without time zone"
          },
          "timestamptz": {
            "name": "timestamptz",
            "type": "timestamp with time zone"
          },
          "uuid": {
            "name": "uuid",
            "type": "uuid"
          }
        }
      }
    }
  },
  "aggregate_functions": {
    "bigint": {
      "bit_and": {
        "return_type": "bigint"
      },
      "bit_or": {
        "return_type": "bigint"
      },
      "bit_xor": {
        "return_type": "bigint"
      },
      "count": {
        "return_type": "bigint"
      },
      "dense_rank": {
        "return_type": "bigint"
      },
      "max": {
        "return_type": "bigint"
      },
      "min": {
        "return_type": "bigint"
      },
      "rank": {
        "return_type": "bigint"
      },
      "sum": {
        "return_type": "bigint"
      }
    },
    "boolean": {
      "bool_and": {
        "return_type": "boolean"
      },
      "bool_or": {
        "return_type": "boolean"
      },
      "every": {
        "return_type": "boolean"
      }
    },
    "character": {
      "max": {
        "return_type": "character"
      },
      "min": {
        "return_type": "character"
      }
    },
    "date": {
      "max": {
        "return_type": "date"
      },
      "min": {
        "return_type": "date"
      }
    },
    "double precision": {
      "avg": {
        "return_type": "double precision"
      },
      "cume_dist": {
        "return_type": "double precision"
      },
      "max": {
        "return_type": "double precision"
      },
      "min": {
        "return_type": "double precision"
      },
      "percent_rank": {
        "return_type": "double precision"
      },
      "stddev": {
        "return_type": "double precision"
      },
      "stddev_pop": {
        "return_type": "double precision"
      },
      "stddev_samp": {
        "return_type": "double precision"
      },
      "sum": {
        "return_type": "double precision"
      },
      "var_pop": {
        "return_type": "double precision"
      },
      "var_samp": {
        "return_type": "double precision"
      },
      "variance": {
        "return_type": "double precision"
      }
    },
    "integer": {
      "bit_and": {
        "return_type": "integer"
      },
      "bit_or": {
        "return_type": "integer"
      },
      "bit_xor": {
        "return_type": "integer"
      },
      "max": {
        "return_type": "integer"
      },
      "min": {
        "return_type": "integer"
      },
      "ntile": {
        "return_type": "integer"
      }
    },
    "json": {
      "json_agg": {
        "return_type": "json"
      }
    },
    "jsonb": {
      "jsonb_agg": {
        "return_type": "jsonb"
      }
    },
    "numeric": {
      "avg": {
        "return_type": "numeric"
      },
      "max": {
        "return_type": "numeric"
      },
      "min": {
        "return_type": "numeric"
      },
      "stddev": {
        "return_type": "numeric"
      },
      "stddev_pop": {
        "return_type": "numeric"
      },
      "stddev_samp": {
        "return_type": "numeric"
      },
      "sum": {
        "return_type": "numeric"
      },
      "var_pop": {
        "return_type": "numeric"
      },
      "var_samp": {
        "return_type": "numeric"
      },
      "variance": {
        "return_type": "numeric"
      }
    },
    "real": {
      "max": {
        "return_type": "real"
      },
      "min": {
        "return_type": "real"
      },
      "sum": {
        "return_type": "real"
      }
    },
    "smallint": {
      "bit_and": {
        "return_type": "smallint"
      },
      "bit_or": {
        "return_type": "smallint"
      },
      "bit_xor": {
        "return_type": "smallint"
      },
      "max": {
        "return_type": "smallint"
      },
      "min": {
        "return_type": "smallint"
      }
    },
    "text": {
      "max": {
        "return_type": "text"
      },
      "min": {
        "return_type": "text"
      }
    },
    "time with time zone": {
      "max": {
        "return_type": "time with time zone"
      },
      "min": {
        "return_type": "time with time zone"
      }
    },
    "time without time zone": {
      "max": {
        "return_type": "time without time zone"
      },
      "min": {
        "return_type": "time without time zone"
      }
    },
    "timestamp with time zone": {
      "max": {
        "return_type": "timestamp with time zone"
      },
      "min": {
        "return_type": "timestamp with time zone"
      }
    },
    "timestamp without time zone": {
      "max": {
        "return_type": "timestamp without time zone"
      },
      "min": {
        "return_type": "timestamp without time zone"
      }
    }
  }
}
